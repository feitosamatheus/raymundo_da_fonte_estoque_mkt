@model Estoque.Application.ViewModels.Pedido.FiltroPedidoViewModel

@{
    ViewData["Title"] = "Pedidos";
}

<style>
    .card-custom{
        border-top: 2px solid #005f9978 !important;
        box-shadow: rgba(0, 0, 0, 0.15) 2.4px 2.4px 3.2px;
    }

    .card-item{
        color: #3d4b52;
        border-radius: 0 !important;
        border-bottom: 1px solid #96a1a7 !important;
    }

    .card-item-toggle{
        cursor: pointer;
        color: #3d4b52;
        font-weight: 600;
    }

</style>

<div class=" border-bottom d-flex align-items-start">
    <i class="bi bi-card-checklist me-2 fs-5"></i>
    <h4 class="fw-normal">
        Pedidos
    </h4>
</div>

<div class="row mt-3 mb-4">
    <div class="col-12">
        <div class="card card-custom p-2 pt-1 pb-3">
            <ul class="list-group list-group-horizontal border-bottom">
                <li class="list-group-item border-0 ps-5 pe-5 card-item">Filtro</li>
                <li class="list-group-item border-0 ms-auto p-0 me-2 card-item-toggle" title="Filtro" data-bs-toggle="collapse" data-bs-target="#pesquisar-pedido">
                    <h3 class="mt-1">
                        <i class="bi bi-filter-right"></i>
                    </h3>
                </li>
            </ul>
            <div class="collapse show" id="pesquisar-pedido">
                <form class="row mt-4" asp-controller="Pedido" asp-action="BuscarPedidos" method="post" id="form-pesquisa-pedido">
                    <div class="col-6 col-lg-3 mb-3">
                        <div class="input-group flex-nowrap">
                            <label class="input-group-text" asp-for="CodPedido"></label>
                            <input asp-for="CodPedido" type="text" class="form-control" placeholder="Número do Pedido" />
                        </div>
                    </div>
                    <div class="col-6 col-lg-3 mb-3">
                        <div class="input-group flex-nowrap">
                            <label class="input-group-text" asp-for="NotaFiscal"></label>
                            <input asp-for="NotaFiscal" type="text" class="form-control" placeholder="Nota Fiscal" />
                        </div>
                    </div>
                    <div class="col-6 col-lg-3 mb-3">
                        <div class="input-group">
                            <label class="input-group-text" asp-for="IdSituacao"></label>
                            <select asp-for="IdSituacao" class="form-select" asp-items="ViewBag.ListaSituacaoPedido">
                                <option selected value="">Todas</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-12 col-lg-3 text-end text-lg-start">
                        <button type="button" class="btn btn-primary" id="btn-buscar-pedidos">Pesquisar</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<div id="div-relatorio-pedidos"></div>

<script>
    const divRelatorioPedidos = document.querySelector("#div-relatorio-pedidos");
    const formRelatorioPedido = document.getElementById("form-pesquisa-pedido");
    var btnBuscarPedidos = document.querySelector("#btn-buscar-pedidos");

    btnBuscarPedidos.onclick = () => buscarPedidos();

    const buscarPedidos = async () => {
        const url = formRelatorioPedido.getAttribute("action")
        const type = formRelatorioPedido.getAttribute("method")
        const codPedido = document.getElementById("CodPedido");
        const notaFiscal = document.getElementById("NotaFiscal");
        const idSituacao = document.getElementById("IdSituacao");
        const filtros = {CodPedido: codPedido.value, NotaFiscal: notaFiscal.value, IdSituacao: idSituacao.value}
        btnBuscarPedidos.innerHTML = 'Carregando...';
        
        try{
            await fetch(url, {
                method: type,
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded'
                },
                body: new URLSearchParams(filtros)
            })
            .then((response) => {
                return response.text();
            })
            .then((html) => {
                btnBuscarPedidos.innerHTML = "Pesquisar";
                divRelatorioPedidos.innerHTML = html
            });

        }catch(err){
            btnBuscarPedidos.innerHTML = "Pesquisar";
            alert("error" + err);
        }
    }

    const pagination = async (url) => {      
        try{
            await fetch(url, {
                method: 'POST'
            })
            .then((response) => {
                return response.text();
            })
            .then((html) => {
                divRelatorioPedidos.innerHTML = html
            });
        }catch(err){
            alert("error: " + err)
        }
    }

    const ordenation = async (element) => {
        debugger;
        var url = element.getAttribute('href');
        element.removeAttribute('href');

        try{
            await fetch(url, {
                method: 'POST'
            })
            .then((response) => {
                return response.text();
            })
            .then((html) => {
                divRelatorioPedidos.innerHTML = html
            });
        }catch(err){
            alert("erro:" + err)
        }
    }
</script>